{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { filter, interval, map, scan, take } from \"rxjs\";\nlet MyWalletComponent = class MyWalletComponent {\n  constructor(dataService, createWalletModal) {\n    this.dataService = dataService;\n    this.createWalletModal = createWalletModal;\n    this.user = this.dataService.user;\n    this.walletCards = this.dataService.walletCards;\n  }\n  getUnreadTransactions(data, filter_key) {\n    interval(200).pipe(take(data.length), filter(res => data[res].type === filter_key), map(res => data[res].type), scan((acc, res) => acc.concat(res), [])).subscribe(res => {\n      this.walletsCardsItems = res.length;\n    }, null);\n  }\n};\nMyWalletComponent = __decorate([Component({\n  selector: 'app-my-wallet',\n  templateUrl: './my-wallet.component.html',\n  styleUrls: ['./my-wallet.component.scss']\n})], MyWalletComponent);\nexport { MyWalletComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAAQC,MAAM,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,QAAO,MAAM;AAQ/C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAoBC,WAAwB,EAASC,iBAA2B;IAA5D,gBAAW,GAAXD,WAAW;IAAsB,sBAAiB,GAAjBC,iBAAiB;IACpE,IAAI,CAACC,IAAI,GAAG,IAAI,CAACF,WAAW,CAACE,IAAI;IACjC,IAAI,CAACC,WAAW,GAAG,IAAI,CAACH,WAAW,CAACG,WAAW;EACjD;EAEAC,qBAAqB,CAACC,IAAS,EAAEC,UAAe;IAC9CZ,QAAQ,CAAC,GAAG,CAAC,CACVa,IAAI,CACHV,IAAI,CAACQ,IAAI,CAACG,MAAM,CAAC,EACjBf,MAAM,CAACgB,GAAG,IAAIJ,IAAI,CAACI,GAAG,CAAC,CAACC,IAAI,KAAKJ,UAAU,CAAC,EAC5CX,GAAG,CAACc,GAAG,IAAIJ,IAAI,CAACI,GAAG,CAAC,CAACC,IAAI,CAAC,EAC1Bd,IAAI,CAAC,CAACe,GAAG,EAAEF,GAAG,KAAKE,GAAG,CAACC,MAAM,CAACH,GAAG,CAAC,EAAE,EAAE,CAAC,CACxC,CACAI,SAAS,CAAEJ,GAAG,IAAI;MACjB,IAAI,CAACK,iBAAiB,GAAGL,GAAG,CAACD,MAAM;IACrC,CAAC,EAAE,IAAI,CAAC;EACZ;CAED;AAvBYV,iBAAiB,eAL7BN,SAAS,CAAC;EACTuB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACWnB,iBAAiB,CAuB7B;SAvBYA,iBAAiB","names":["Component","filter","interval","map","scan","take","MyWalletComponent","constructor","dataService","createWalletModal","user","walletCards","getUnreadTransactions","data","filter_key","pipe","length","res","type","acc","concat","subscribe","walletsCardsItems","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/alexandergrischenko/WebstormProjects/test-dnipro-app/frontend/src/app/pages/my-wallet/my-wallet.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {DataService} from \"../../services/data.service\";\nimport {filter, interval, map, scan, take} from \"rxjs\";\nimport { MdDialog } from '@angular/material';\n\n@Component({\n  selector: 'app-my-wallet',\n  templateUrl: './my-wallet.component.html',\n  styleUrls: ['./my-wallet.component.scss']\n})\nexport class MyWalletComponent {\n  walletCards: any;\n  walletsCardsItems: any;\n  user: any;\n\n  constructor(private dataService: DataService, public createWalletModal: MdDialog) {\n    this.user = this.dataService.user\n    this.walletCards = this.dataService.walletCards\n  }\n\n  getUnreadTransactions(data: any, filter_key: any) {\n    interval(200)\n      .pipe(\n        take(data.length),\n        filter(res => data[res].type === filter_key),\n        map(res => data[res].type),\n        scan((acc, res) => acc.concat(res), [])\n      )\n      .subscribe((res) => {\n        this.walletsCardsItems = res.length\n      }, null)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}