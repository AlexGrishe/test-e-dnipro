{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nlet SideBarComponent = class SideBarComponent {\n  constructor(dataSe) {\n    this.dataSe = dataSe;\n    this.dataSideBarChanged = new EventEmitter();\n    this.sidebarStatus = true;\n  }\n  changeStatusSideBar() {\n    this.sidebarStatus = !this.sidebarStatus;\n    this.dataSideBarChanged.emit(!this.sidebarStatus);\n  }\n};\n__decorate([Input()], SideBarComponent.prototype, \"items\", void 0);\n__decorate([Output()], SideBarComponent.prototype, \"dataSideBarChanged\", void 0);\nSideBarComponent = __decorate([Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.scss']\n})], SideBarComponent);\nexport { SideBarComponent };","map":{"version":3,"mappings":";AAAA,SAAQA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAO,eAAe;AAO7D,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK3BC,YAAoBC,MAAM;IAAN,WAAM,GAANA,MAAM;IAHhB,uBAAkB,GAAsB,IAAIL,YAAY,EAAO;IAClE,kBAAa,GAAY,IAAI;EAGpC;EAEAM,mBAAmB;IACjB,IAAI,CAACC,aAAa,GAAG,CAAC,IAAI,CAACA,aAAa;IACxC,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAAC,CAAC,IAAI,CAACF,aAAa,CAAC;EACnD;CACD;AAXUG,YAART,KAAK,EAAE,+CAA0B;AACxBS,YAATR,MAAM,EAAE,4DAAgE;AAF9DC,gBAAgB,eAL5BJ,SAAS,CAAC;EACTY,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWV,gBAAgB,CAY5B;SAZYA,gBAAgB","names":["Component","EventEmitter","Input","Output","SideBarComponent","constructor","dataSe","changeStatusSideBar","sidebarStatus","dataSideBarChanged","emit","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/alexandergrischenko/WebstormProjects/test-dnipro-app/frontend/src/app/components/side-bar/side-bar.component.ts"],"sourcesContent":["import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.scss']\n})\nexport class SideBarComponent {\n  @Input() items: any[] | undefined;\n  @Output() dataSideBarChanged: EventEmitter<any> = new EventEmitter<any>()\n  public sidebarStatus: boolean = true;\n\n  constructor(private dataSe) {\n  }\n\n  changeStatusSideBar() {\n    this.sidebarStatus = !this.sidebarStatus\n    this.dataSideBarChanged.emit(!this.sidebarStatus)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}